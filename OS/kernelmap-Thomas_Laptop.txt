
Allocating common symbols
Common symbol       size              file

mbi                 0x4               console.o
framebuffer         0x4               console.o
lastCharDrawn       0x1               console.o

Discarded input sections

 .eh_frame      0x0000000000000000       0x34 kernelmain.o
 .eh_frame      0x0000000000000000       0x38 stdarg.o
 .eh_frame      0x0000000000000000      0x150 console.o
 .eh_frame      0x0000000000000000      0x138 util.o
 .eh_frame      0x0000000000000000       0xc8 kprintf.o
 .eh_frame      0x0000000000000000       0x38 testsuite.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0x0000000000400000                __image_base__ = 0x400000
                0x0000000000000000                __dll__ = 0x0
                0x0000000000400000                ___ImageBase = 0x400000
                0x0000000000001000                __section_alignment__ = 0x1000
                0x0000000000000200                __file_alignment__ = 0x200
                0x0000000000000004                __major_os_version__ = 0x4
                0x0000000000000000                __minor_os_version__ = 0x0
                0x0000000000000001                __major_image_version__ = 0x1
                0x0000000000000000                __minor_image_version__ = 0x0
                0x0000000000000004                __major_subsystem_version__ = 0x4
                0x0000000000000000                __minor_subsystem_version__ = 0x0
                0x0000000000000003                __subsystem__ = 0x3
                0x0000000000200000                __size_of_stack_reserve__ = 0x200000
                0x0000000000001000                __size_of_stack_commit__ = 0x1000
                0x0000000000100000                __size_of_heap_reserve__ = 0x100000
                0x0000000000001000                __size_of_heap_commit__ = 0x1000
                0x0000000000000000                __loader_flags__ = 0x0
                0x0000000000000000                __dll_characteristics__ = 0x0
                0x0000000000100000                . = 0x100000

.text           0x0000000000100000     0xa200
                0x0000000000100000                _textStart = .
 *(.text)
 .text          0x0000000000100000       0x58 kernelasm.o
 .text          0x0000000000100058       0x18 kernelmain.o
                0x0000000000100058                kmain
 .text          0x0000000000100070       0x24 stdarg.o
                0x0000000000100070                _va_arg
 .text          0x0000000000100094      0x6e8 console.o
                0x0000000000100094                set_pixel
                0x0000000000100161                clearScreen
                0x0000000000100205                smoothlyTransitionColors
                0x00000000001003a2                backspace
                0x00000000001003ea                checkIfScroll
                0x00000000001004c2                consoleDrawChar
                0x00000000001005d6                console_putc
                0x0000000000100719                consoleDrawString
                0x0000000000100758                consol_init
 .text          0x000000000010077c      0x148 util.o
                0x000000000010077c                clearBss
                0x0000000000100798                outb
                0x00000000001007b7                outw
                0x00000000001007d8                inb
                0x00000000001007f4                inw
                0x0000000000100811                isBusy
                0x000000000010082d                kmemcpy
                0x0000000000100868                kmemset
                0x0000000000100892                Factorial
 .text          0x00000000001008c4      0xc04 kprintf.o
                0x0000000000100929                kprintf
                0x0000000000100957                ksprintf
 .text          0x00000000001014c8       0x64 testsuite.o
                0x00000000001014c8                sweet
 *(.rodata)
 *(.rdata)
 *fill*         0x000000000010152c       0x14 
 .rdata         0x0000000000101540     0x2000 kernelmain.o
 .rdata         0x0000000000103540     0x2000 console.o
 .rdata         0x0000000000105540     0x21e0 kprintf.o
 .rdata         0x0000000000107720      0xffc testsuite.o
 *(.rdata$zzz)
 .rdata$zzz     0x000000000010871c       0x14 kernelmain.o
 .rdata$zzz     0x0000000000108730       0x14 stdarg.o
 .rdata$zzz     0x0000000000108744       0x14 console.o
 .rdata$zzz     0x0000000000108758       0x14 util.o
 .rdata$zzz     0x000000000010876c       0x14 kprintf.o
 .rdata$zzz     0x0000000000108780       0x14 testsuite.o
                0x0000000000108794                _textEnd = .
                0x0000000000109000                . = ALIGN (ABSOLUTE (.), 0x1000)
 *fill*         0x0000000000108794      0x86c 
                0x0000000000109000                _dataStart = .
 *(.data)
 .data          0x0000000000109000        0x0 kernelmain.o
 .data          0x0000000000109000        0x0 stdarg.o
 .data          0x0000000000109000       0x60 console.o
                0x0000000000109000                colorPattern
                0x0000000000109048                red
                0x000000000010904c                green
 .data          0x0000000000109060        0x0 util.o
 .data          0x0000000000109060        0x0 kprintf.o
 .data          0x0000000000109060        0x4 testsuite.o
                0x0000000000109060                decl
                0x0000000000109064                _dataEnd = .
                0x0000000000109064                _bssStart = .
 *(COMMON)
 COMMON         0x0000000000109064        0x9 console.o
                0x0000000000109064                mbi
                0x0000000000109068                framebuffer
                0x000000000010906c                lastCharDrawn
 *(.bss)
 *fill*         0x000000000010906d        0x3 
 .bss           0x0000000000109070     0x1000 kernelasm.o
 .bss           0x000000000010a070        0x0 kernelmain.o
 .bss           0x000000000010a070        0x0 stdarg.o
 .bss           0x000000000010a070       0x10 console.o
                0x000000000010a070                pixCol
                0x000000000010a074                pixRow
                0x000000000010a078                colorChangeIndex
                0x000000000010a07c                blue
 .bss           0x000000000010a080        0x0 util.o
 .bss           0x000000000010a080        0x0 kprintf.o
 .bss           0x000000000010a080        0x0 testsuite.o
                0x000000000010a080                _bssEnd = .

.drectve        0x000000000010b000      0x200
 .drectve       0x000000000010b000       0x30 console.o

/DISCARD/
 *(.eh_frame)
 *(.comment)
LOAD kernelasm.o
LOAD kernelmain.o
LOAD stdarg.o
LOAD console.o
LOAD util.o
LOAD kprintf.o
LOAD testsuite.o
OUTPUT(kernel.tmp pei-i386)
