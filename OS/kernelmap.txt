
Allocating common symbols
Common symbol       size              file

mbi                 0x4               console.o
framebuffer         0x4               console.o
idt                 0x188             interrupt.o
debugMsg            0xc8              file.o
kernelStack         0x1f4             kernelmain.o
buff                0x80              console.o
blockbuffer         0x64320           file.o
file_table          0x1068            kernelmain.o
lastCharDrawn       0x1               console.o
SB                  0x400             kernelmain.o

Discarded input sections

 .eh_frame      0x0000000000000000       0x34 kernelmain.o
 .eh_frame      0x0000000000000000       0x38 stdarg.o
 .eh_frame      0x0000000000000000      0x190 console.o
 .eh_frame      0x0000000000000000      0x178 util.o
 .eh_frame      0x0000000000000000       0xc8 kprintf.o
 .eh_frame      0x0000000000000000      0x1c0 disk.o
 .eh_frame      0x0000000000000000       0xe8 file.o
 .eh_frame      0x0000000000000000      0x340 interrupt.o
 .eh_frame      0x0000000000000000       0xc0 testsuite.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0x0000000000400000                __image_base__ = 0x400000
                0x0000000000000000                __dll__ = 0x0
                0x0000000000400000                ___ImageBase = 0x400000
                0x0000000000001000                __section_alignment__ = 0x1000
                0x0000000000000200                __file_alignment__ = 0x200
                0x0000000000000004                __major_os_version__ = 0x4
                0x0000000000000000                __minor_os_version__ = 0x0
                0x0000000000000001                __major_image_version__ = 0x1
                0x0000000000000000                __minor_image_version__ = 0x0
                0x0000000000000004                __major_subsystem_version__ = 0x4
                0x0000000000000000                __minor_subsystem_version__ = 0x0
                0x0000000000000003                __subsystem__ = 0x3
                0x0000000000200000                __size_of_stack_reserve__ = 0x200000
                0x0000000000001000                __size_of_stack_commit__ = 0x1000
                0x0000000000100000                __size_of_heap_reserve__ = 0x100000
                0x0000000000001000                __size_of_heap_commit__ = 0x1000
                0x0000000000000000                __loader_flags__ = 0x0
                0x0000000000000000                __dll_characteristics__ = 0x0
                0x0000000000100000                . = 0x100000

.text           0x0000000000100000    0x78c00
                0x0000000000100000                _textStart = .
 *(.text)
 .text          0x0000000000100000       0x58 kernelasm.o
 .text          0x0000000000100058       0x38 kernelmain.o
                0x0000000000100058                kmain
 .text          0x0000000000100090       0x24 stdarg.o
                0x0000000000100090                _va_arg
 .text          0x00000000001000b4      0x708 console.o
                0x00000000001000b4                loop
                0x00000000001000d9                set_pixel
                0x00000000001001a6                clearScreen
                0x0000000000100247                smoothlyTransitionColors
                0x00000000001003e4                backspace
                0x0000000000100451                newLine
                0x000000000010048f                scroll
                0x000000000010051c                consoleDrawChar
                0x0000000000100630                console_putc
                0x0000000000100758                consoleDrawString
                0x0000000000100797                consol_init
 .text          0x00000000001007bc      0x1f8 util.o
                0x00000000001007bc                outb
                0x00000000001007db                outw
                0x00000000001007fc                inb
                0x0000000000100818                inw
                0x0000000000100835                logString
                0x000000000010087c                clearBss
                0x0000000000100898                kstrln
                0x00000000001008c0                kmemcmp
                0x000000000010091b                kmemcpy
                0x0000000000100956                kmemset
                0x0000000000100980                Factorial
 .text          0x00000000001009b4      0xc04 kprintf.o
                0x0000000000100a19                kprintf
                0x0000000000100a47                ksprintf
 .text          0x00000000001015b8      0x848 disk.o
                0x00000000001015b8                selectSector
                0x000000000010164d                isBusy
                0x0000000000101669                isDiskReady
                0x00000000001016c9                disk_read_sector
                0x0000000000101781                disk_write_sector
                0x000000000010183b                disk_read_block
                0x0000000000101880                disk_read_partial
                0x00000000001018db                disk_read_inode
                0x000000000010196a                list_SB_info
                0x00000000001019b7                list_BGDTS_info
                0x0000000000101a8d                checkDirs
                0x0000000000101d34                listDiskInfo
                0x0000000000101dbd                disk_init
 .text          0x0000000000101e00      0x7e0 file.o
                0x0000000000101e00                read_block
                0x0000000000101f50                file_open
                0x000000000010207f                file_close
                0x00000000001020c5                file_read
                0x00000000001024f1                file_write
                0x00000000001024fb                file_seek
 .text          0x00000000001025e0      0x900 interrupt.o
                0x00000000001025e0                exec
                0x00000000001026c3                syscall
                0x00000000001026e6                haltForever
                0x00000000001026ec                haltUntilInterrupt
                0x00000000001026f3                setupPICS_RTC
                0x000000000010288d                syscall_handler
                0x00000000001029e6                divideByZeroInterrupt
                0x0000000000102a1e                debugTrapInterrupt
                0x0000000000102a56                badOpcodeInterrupt
                0x0000000000102a8e                unknownInterrupt
                0x0000000000102ac6                unknownInterruptWithCode
                0x0000000000102b11                protectionFaultInterrupt
                0x0000000000102b5c                pageFaultInterrupt
                0x0000000000102ba7                int48Interrupt
                0x0000000000102bf9                firstPicInterrupt
                0x0000000000102c2a                secondPicInterrupt
                0x0000000000102c6f                RTCint
                0x0000000000102ce1                table
                0x0000000000102d36                setInterruptTable
                0x0000000000102e4b                setupGDT
                0x0000000000102e96                interrupt_init
 .text          0x0000000000102ee0      0x510 testsuite.o
                0x0000000000103023                displayPPM
                0x0000000000103299                sweet
 *(.rodata)
 *(.rdata)
 *fill*         0x00000000001033f0       0x10 
 .rdata         0x0000000000103400     0x2020 kernelmain.o
 .rdata         0x0000000000105420     0x2000 console.o
 .rdata         0x0000000000107420     0x21e0 kprintf.o
 .rdata         0x0000000000109600      0x168 disk.o
 .rdata         0x0000000000109768      0x1b4 file.o
 .rdata         0x000000000010991c      0x1ac interrupt.o
 .rdata         0x0000000000109ac8       0x94 testsuite.o
 *(.rdata$zzz)
 .rdata$zzz     0x0000000000109b5c       0x14 kernelmain.o
 .rdata$zzz     0x0000000000109b70       0x14 stdarg.o
 .rdata$zzz     0x0000000000109b84       0x14 console.o
 .rdata$zzz     0x0000000000109b98       0x14 util.o
 .rdata$zzz     0x0000000000109bac       0x14 kprintf.o
 .rdata$zzz     0x0000000000109bc0       0x14 disk.o
 .rdata$zzz     0x0000000000109bd4       0x14 file.o
 .rdata$zzz     0x0000000000109be8       0x14 interrupt.o
 .rdata$zzz     0x0000000000109bfc       0x14 testsuite.o
                0x0000000000109c10                _textEnd = .
                0x000000000010a000                . = ALIGN (ABSOLUTE (.), 0x1000)
 *fill*         0x0000000000109c10      0x3f0 
                0x000000000010a000                _dataStart = .
 *(.data)
 .data          0x000000000010a000        0x0 kernelmain.o
 .data          0x000000000010a000        0x0 stdarg.o
 .data          0x000000000010a000       0x60 console.o
                0x000000000010a000                colorPattern
                0x000000000010a048                red
                0x000000000010a04c                green
 .data          0x000000000010a060        0x0 util.o
 .data          0x000000000010a060        0x0 kprintf.o
 .data          0x000000000010a060        0x0 disk.o
 .data          0x000000000010a060        0x0 file.o
 .data          0x000000000010a060       0x60 interrupt.o
                0x000000000010a060                FileToLoad
                0x000000000010a064                ring0StackInfo
                0x000000000010a080                gdt
 .data          0x000000000010a0c0        0x0 testsuite.o
                0x000000000010a0c0                _dataEnd = .
                0x000000000010a0c0                _bssStart = .
 *(COMMON)
 COMMON         0x000000000010a0c0     0x1680 kernelmain.o
                0x000000000010a0c0                kernelStack
                0x000000000010a2c0                file_table
                0x000000000010b340                SB
 COMMON         0x000000000010b740       0xa1 console.o
                0x000000000010b740                mbi
                0x000000000010b744                framebuffer
                0x000000000010b760                buff
                0x000000000010b7e0                lastCharDrawn
 *fill*         0x000000000010b7e1       0x1f 
 COMMON         0x000000000010b800    0x64400 file.o
                0x000000000010b800                debugMsg
                0x000000000010b8e0                blockbuffer
 COMMON         0x000000000016fc00      0x188 interrupt.o
                0x000000000016fc00                idt
 *(.bss)
 .bss           0x000000000016fd88     0x1000 kernelasm.o
 .bss           0x0000000000170d88        0x0 kernelmain.o
 .bss           0x0000000000170d88        0x0 stdarg.o
 .bss           0x0000000000170d88       0x10 console.o
                0x0000000000170d88                pixCol
                0x0000000000170d8c                pixRow
                0x0000000000170d90                colorChangeIndex
                0x0000000000170d94                blue
 .bss           0x0000000000170d98        0x0 util.o
 .bss           0x0000000000170d98        0x0 kprintf.o
 *fill*         0x0000000000170d98        0x8 
 .bss           0x0000000000170da0     0x4000 disk.o
 .bss           0x0000000000174da0     0x2020 file.o
 .bss           0x0000000000176dc0        0x4 interrupt.o
                0x0000000000176dc0                jiffies
 *fill*         0x0000000000176dc4       0x1c 
 .bss           0x0000000000176de0     0x1e00 testsuite.o
                0x0000000000178be0                _bssEnd = .

.drectve        0x0000000000179000      0x200
 .drectve       0x0000000000179000       0x4c kernelmain.o
 .drectve       0x000000000017904c       0x58 console.o
 .drectve       0x00000000001790a4       0x14 disk.o
 .drectve       0x00000000001790b8       0x64 file.o
 .drectve       0x000000000017911c       0x78 interrupt.o

/DISCARD/
 *(.eh_frame)
 *(.comment)
LOAD kernelasm.o
LOAD kernelmain.o
LOAD stdarg.o
LOAD console.o
LOAD util.o
LOAD kprintf.o
LOAD disk.o
LOAD file.o
LOAD interrupt.o
LOAD testsuite.o
OUTPUT(kernel.tmp pei-i386)
